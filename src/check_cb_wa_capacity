#!/usr/bin/perl -w
# plugin for checking capacity of water activity services
# supply -h param to get help

use strict;
use Mojo::DOM;
use Scalar::Util qw(looks_like_number);
use Getopt::Long;
&Getopt::Long::config('bundling');

my $opt_h;
my $url;

my $output = "OK";
my $message = '';
my $perf0 = '| pool=';
my $perf1 = ' sauna=';

my $pageContents;
my @chunks;

my @data;

my %STATUS_CODE =
	('UNKNOWN' => '3', 'OK' => '0', 'WARNING' => '1', 'CRITICAL' => '2');

my $status = GetOptions(
	"h|help"	=> \$opt_h,
	"u|url=s"	=> \$url,
);

if ($opt_h || !defined $url) {
	print_usage();
	exit $STATUS_CODE{'UNKNOWN'};
}
$url = "$url/" unless substr($url, -1) eq "/";

$message = 'Alles in Ordnung';
$perf0 .= perf_line(parse_route('plavecky-stadion'));
$perf1 .= perf_line(parse_route('sauna'));

print "$output: $message$perf0$perf1\n";

exit($STATUS_CODE{$output});

sub getResponse {
	my $query = "wget -qO - \'". shift . "\'";
	$query = `$query`;
}

sub parse_route {
    my $dom = Mojo::DOM->new;
    $dom->parse(getResponse($url . shift));
    my $component_parent = $dom->find('div#snippet-widget-panel1-widgetsnippet');
    my $ratio_container = $component_parent->first->find('div.panel-ratio');
    my @result = split ' / ', $ratio_container->first->content;
}

sub perf_line {
    my $perf = shift . ";;;0;" . shift;
}

sub print_usage {
	print <<EOU;

Usage: ./check_cb_wa_capacity -u <target-water-activities-page-URL>

Plugin scrapes target URL for capacity of water activity services.
Persons count in either pool and sauna is returned via performance data.

	Options:
	-h, --help
	Get this help message
	-u, --url
	URL to query

EOU
	exit($STATUS_CODE{"UNKNOWN"});
}
